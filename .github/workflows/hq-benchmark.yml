name: HQ speed regression

on:
  # automatic trigger when relevant files changed
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths:
      - '**/MoveGeneratorHQ.java'
      - '**/MoveGeneratorHQTest.java'
      - '**/HQBenchmark.java'

  # manual “Run workflow” button in the GitHub UI
  workflow_dispatch:

permissions:
  contents: read

jobs:
  bench:
    runs-on: windows-latest
    timeout-minutes: 300

    steps:
      # checkout
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # ─── show which files GitHub thinks changed ───
      - name: Show diff between base & PR
        shell: bash
        run: |
          echo "Files that decide the paths-filter:"
          git fetch origin "${{ github.base_ref }}"
          git diff --name-only "origin/${{ github.base_ref }}" "${{ github.sha }}"

      # JDK
      - name: Set up Temurin 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      # Gradle cache
      - uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      # -------- benchmark base ----------
      - name: Benchmark base branch
        shell: bash
        run: |
          set -euo pipefail
          echo "▶ running benchmark on origin/${{ github.base_ref }}"
          git checkout "origin/${{ github.base_ref }}"
          ./gradlew --no-daemon --console=plain \
            -PbenchInclude=HQBenchmark \
            -Djmh.warmupIterations=3 \
            -Djmh.iterations=20 \
            -Djmh.fork=2 \
            -Djmh.verbose=true \
            -Dcases=10 \
            jmh > base.txt

      # -------- benchmark PR HEAD ----------
      - name: Benchmark PR branch
        shell: bash
        run: |
          set -euo pipefail
          echo "▶ running benchmark on PR head ${{ github.sha }}"
          git checkout "${{ github.sha }}"
          ./gradlew --no-daemon --console=plain \
            -PbenchInclude=HQBenchmark \
            -Djmh.warmupIterations=3 \
            -Djmh.iterations=20 \
            -Djmh.fork=2 \
            -Djmh.verbose=true \
            -Dcases=10 \
            jmh > pr.txt

      # -------- compare ----------
      - name: Diff the two runs
        shell: bash
        run: |
          set -euo pipefail
          python scripts/compare_jmh.py base.txt pr.txt

  perft:
    runs-on: windows-latest
    timeout-minutes: 120
    env:
      RUN_PERFT: "true"

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Temurin 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Run perft tests
        shell: bash
        run: |
          set -euo pipefail
          ./gradlew --no-daemon --console=plain test
