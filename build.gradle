/*  build.gradle — JPMS‑ready, jlink + jpackage + Warp  */
plugins {
    id 'java'
    id 'application'
    id 'com.diffplug.spotless' version '6.25.0'
    id 'me.champeau.jmh'       version '0.7.2'
    id 'org.beryx.jlink'       version '2.25.0'
}

/* ── formatting ───────────────────────────────────────── */
spotless {
    java {
        googleJavaFormat()
        target 'src/**/*.java'
    }
}

/* ── coordinates ──────────────────────────────────────── */
group   = 'tyler.breese'
version = '1.0.0'

repositories { mavenCentral() }

/* ── deps ─────────────────────────────────────────────── */
dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

/* ── application entry point (JPMS) ───────────────────── */
application {
    mainClass.set('main.Main')
    mainModule.set('Helios')
    applicationDefaultJvmArgs = ['-Xmx1g', '--add-modules=jdk.incubator.vector']
}

/* ── jlink  + optional jpackage image  ────────────────── */
jlink {
    moduleName = 'Helios'

    // ensure the image actually contains the incubator module
    customImage {
        jdkModules = ['jdk.incubator.vector']
    }

    // ensure the generated launcher adds it at runtime
    launcher {
        jvmArgs = ['--add-modules=jdk.incubator.vector']
    }

    options    = ['--strip-debug', '--compress=2',
                  '--no-header-files', '--no-man-pages']

    jpackage {
        appVersion = project.version
        vendor     = 'Helios'
        // imageOptions += ['--icon', 'src/main/resources/knight.ico']
    }
}

/* ── JDK toolchain ────────────────────────────────────── */
java { toolchain.languageVersion = JavaLanguageVersion.of(21) }

/* ── JMH defaults (unchanged) ─────────────────────────── */
jmh {
    warmupIterations = 2
    iterations       = 5
    fork             = 3
    benchmarkMode    = ['thrpt']
    timeUnit         = 's'
    failOnError      = true
    resultFormat     = 'CSV'
    resultsFile      = layout.buildDirectory.file('results/jmh/results.csv').get().asFile
    jvmArgs = ['--add-modules=jdk.incubator.vector']
}

/* ── fat‑JAR for dev convenience (unchanged) ──────────── */
import org.gradle.jvm.tasks.Jar
tasks.register('fatJar', Jar) {
    dependsOn classes
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest { attributes 'Main-Class': 'main.Main' }
    from sourceSets.main.output
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    archiveBaseName.set('Helios')
    archiveClassifier.set('all')
    archiveVersion.set('')
}

/* ── single‑file Windows EXE via Warp Packer ────────────
   Requires `warp-packer.exe` on PATH:
   https://github.com/dgiagio/warp/releases                       */
tasks.register('warpPack', Exec) {
    dependsOn tasks.jlink
    group       = 'distribution'
    description = 'Packages the jlink image into one Helios.exe with Warp'

    def imageDir = layout.buildDirectory.dir("image").get().asFile   // build/image
    def outExe   = layout.buildDirectory.file("dist/Helios.exe").get().asFile

    doFirst { outExe.parentFile.mkdirs() }                           // ensure build/dist exists

    executable project.findProperty('warpPacker') ?: 'warp-packer'   // allow override via -PwarpPacker=...
    args '--arch',     'windows-x64',
         '--input_dir', imageDir.path,
         '--exec',      'bin/Helios.bat',   // jlink’s batch launcher
         '--output',    outExe.path
}

/* Make every `gradlew build` also emit the single‑file exe */
tasks.build.configure { finalizedBy tasks.warpPack }

/* ── test runner ──────────────────────────────────────── */
tasks.withType(Test).configureEach { useJUnitPlatform() }

// tests
tasks.withType(Test).configureEach {
    jvmArgs '--add-modules=jdk.incubator.vector'
}

tasks.withType(JavaExec).configureEach {
    jvmArgs '--add-modules=jdk.incubator.vector'
}