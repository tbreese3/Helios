/*  build.gradle  — JPMS-ready version  */
plugins {
    id 'java'
    id 'application'
    id 'com.diffplug.spotless' version '6.25.0'
    id 'me.champeau.jmh'       version '0.7.2'
    id 'org.beryx.jlink'       version '2.25.0'
}

/* ── formatting ─────────────────────────────────────────── */
spotless {
    java {
        googleJavaFormat()
        target 'src/**/*.java'
    }
}

/* ── coordinates ────────────────────────────────────────── */
group   = 'tyler.breese'
version = '1.0.0'

repositories { mavenCentral() }

/* ── deps ───────────────────────────────────────────────── */
dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
}

/* ── application entry point (JPMS!) ────────────────────── */
application {
    mainClass.set('main.Main')   // fully-qualified class with public static void main
    mainModule.set('Helios')     // must match module-info.java
    applicationDefaultJvmArgs = ['-Xmx1g']   // 1 gig heap
}

/* ── jlink / jpackage ───────────────── */
jlink {
    moduleName = 'Helios'        // exact same name as module-info.java
    options    = ['--strip-debug','--compress','2',
                  '--no-header-files','--no-man-pages']

    jpackage {
        appVersion    = project.version
        vendor        = 'Helios'
        // imageOptions += ['--icon', 'src/main/resources/knight.ico']  // optional
    }
}

/* ── JDK to compile & package with ──────────────────────── */
java {
    toolchain.languageVersion = JavaLanguageVersion.of(21)  // or 24 if you prefer
}

/* ── JMH defaults (unchanged) ───────────────────────────── */
jmh {
    warmupIterations = 2
    iterations       = 5
    fork             = 3
    benchmarkMode    = ['thrpt']
    timeUnit         = 's'
    failOnError      = true
    resultFormat     = 'CSV'
    resultsFile      = layout.buildDirectory
            .file('results/jmh/results.csv')
            .get()
            .asFile
}

import org.gradle.jvm.tasks.Jar
tasks.register('fatJar', Jar) {
    dependsOn classes
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest { attributes 'Main-Class': 'main.Main' }

    from sourceSets.main.output
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }

    archiveBaseName.set('Helios')
    archiveClassifier.set('all')
    archiveVersion.set('')
}

/*  build.gradle  — add this at the bottom, or anywhere after the plugins  */
tasks.withType(Test).configureEach {
    // run the tests with JUnit 5 instead of JUnit 4
    useJUnitPlatform()
}
